name: Build packages
on:
  push:
    branches: master

jobs:
  build-for-arm:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - run: sudo apt install libc6-dev
    #- run: ./configure DFLAGS="-O3"
    #- run: sudo rm -rf /usr/bin/python2.x
   # - run: sudo rm -rf /usr/lib/python2.x
    #- run: sudo rm -rf /usr/local/lib/python2.x
    - run: sudo apt-get install scons gperf autoconf bison

    - run: sudo ./scripts/run-docker.sh ./build-package.sh -s -a arm git
    #- run: sudo apt install openjdk-8-jdk 
    #- run: sudo ./scripts/setup-android-sdk.sh

        #- run: sudo apt-get install clang
   # - uses: actions/setup-python@v4
    #  with:
     #   python-version: '3.10' 
    - run: sudo ./clean.sh
    - run: ls -a
    - run: ls ./output/
    - run: sudo apt install zip
    - run: zip -r output.zip output
    - uses: actions/upload-artifact@v3
      with:
        name: upload_debs
        path: ./output.zip
        retention-days: 30
         
  release:
     name: Release debs
     needs: build-for-arm
     runs-on: ubuntu-latest
     steps:
       - name: Download debs from build
         uses: actions/download-artifact@v1
         with:
           name: upload_debs

       - name: Create Release
         id: create_release
         uses: actions/create-release@v1
         env:
           GITHUB_TOKEN: ${{ secrets.TK }}
         with:
           tag_name: ${{ github.run_number }}
           release_name: nodejs-lts v16.0.0

       - name: upload Release debs
         id: upload_release_assets
         uses: actions/upload-release-asset@v1.0.1
         env:
            GITHUB_TOKEN: ${{ secrets.TK }}
         with:
           upload_url: ${{ steps.create_release.outputs.upload_url }}
           asset_path:  upload_debs/output.zip
           asset_name: vim.zip
           asset_content_type: application/zip
